The first node is considered odd, and the second node is even, and so on.
here index is checked not the element





/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        ListNode OddHead = new ListNode(-1);
        ListNode OddTail = OddHead;
        ListNode EvenHead = new ListNode(-1);
        ListNode EvenTail = EvenHead;

        ListNode curr = head;
        int index = 1; 
        while(curr!=null){
            if(index % 2 != 0){
                OddTail.next = curr;
                OddTail = curr;
            } 
            else{
                EvenTail.next = curr;
                EvenTail = curr;
            }
            curr = curr.next;
            index++;
        }
        OddTail.next = EvenHead.next;
        EvenTail.next = null;
        return OddHead.next;
    }
}
