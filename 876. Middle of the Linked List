Given the head of a singly linked list, return the middle node of the linked list.
If there are two middle nodes, return the second middle node.


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */



class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode temp = head;
        int count=0;

        while(temp!=null){
            count += 1;
            temp = temp.next;
        } 

        int middle = count / 2;
        ListNode midd = head;
        for(int i=0 ; i<middle ; i++){
            midd = midd.next;
        }
        return midd;
        
    }
   
}
